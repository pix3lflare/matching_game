{"version":3,"sources":["MatchingGame/GridItem.js","MatchingGame/GridRow.js","MatchingGame/GameGrid.js","MatchingGame/Score.js","MatchingGame/Timer.js","MatchingGame/StartModal.js","MatchingGame/WinModal.js","MatchingGame/LoseModal.js","MatchingGame/Header.jsx","Dashboard/theme_context.js","MatchingGame/index.js","Dashboard/ThemeSelector.js","Dashboard/TopNav.js","Dashboard/NavBtn.js","Dashboard/SideNav.js","Dashboard/Content.js","Dashboard/index.js","Dashboard/UserDashboard.js","Dashboard/MessageDashboard.js","TodoApp/HomeScreen.js","reducers/AuthSlice.js","TodoApp/LoginScreen.js","TodoApp/RegisterScreen.js","TodoApp/ForgotPasswordScreen.js","TodoApp/PasswordResetScreen.js","reducers/TodoSlice.js","TodoApp/TodoListScreen.js","TodoApp/NestedRouteUI.js","TodoApp/index.js","ImageUploader/index.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["GridItem","this","props","item","selectItem","selectedItems","className","indexOf","id","matched","matchedBy","onClick","src","value","alt","React","Component","GridRow","columnCount","values","gridItems","i","push","GameGrid","rowCount","valueArray","length","gridRows","startIndex","endIndex","slice","Score","MaxScore","filter","Timer","timeRemaining","StartModal","gameMode","setGameMode","player1","player2","updatePlayer1","updatePlayer2","startNewGame","requestedRounds","updateRequestedRounds","type","placeholder","name","onChange","e","target","WinModal","roundsWon","LoseModal","Header","currentUser","currentRound","score1","score2","ThemeContext","createContext","context","theme","updateTheme","contextType","TopNav","SideNav","Dashboard","children","HomeScreen","Container","to","Button","variant","color","authSlice","createSlice","initialState","token","reducers","setToken","state","payload","logout","actions","LoginScreen","updateUser","field","errorFields","f","updatedState","Object","assign","setState","handleLogin","a","console","log","email","password","loginError","fetch","method","headers","body","JSON","stringify","response","json","respJson","status","message","setAuthToken","TextField","label","fullWidth","error","connect","auth","dispatch","bindActionCreators","RegisterScreen","user","handleRegister","firstName","lastName","phone","registrationError","registrationComplete","ForgotPasswordScreen","PasswordResetScreen","fetchTodoItems","createAsyncThunk","args","thunkAPI","getState","Authorization","todoList","saveTodoItem","todoItem","_id","todo","map","newTodoItem","concat","deleteTodoItem","itemID","completeItem","updatedItem","isComplete","todoSlice","showTodoModal","modalItem","setTodoModal","action","setModalItem","extraReducers","fulfilled","TodoModal","open","handleClose","handleSave","updateItem","Dialog","onClose","DialogTitle","DialogContent","autoFocus","margin","description","DialogActions","TodoItem","editItem","deleteItem","Checkbox","TodoListScreen","todoItems","key","updatedModalItem","AppBar","position","Toolbar","Avatar","NestedRouteUI","exact","path","component","TopicSection","match","params","topic_id","post_id","PrivateRoute","render","TodoApp","ImageUploader","completedItems","selectedFile","fileUrl","onFileChange","event","files","URL","createObjectURL","onFileUpload","formData","FormData","append","combineReducers","reducer","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","logger","thunk","App","persistStore","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9af25d73.chunk.js","sourcesContent":["import React from 'react';\n\nclass GridItem extends React.Component {\n  render() {\n    //https://picsum.photos/id/237/200/300\n    //https://picsum.photos/id/<:id>/<:width>/<:height>\n    const { item, selectItem, selectedItems } = this.props;\n    return (\n      <div\n        className={\n          selectedItems.indexOf(item.id) >= 0 || item.matched\n            ? `grid-item flipped matched-${item.matchedBy}`\n            : 'grid-item'\n        }\n        onClick={() => selectItem(item)}\n      >\n        <img src={item.value} alt=\"...\" />\n      </div>\n    );\n  }\n}\n\nexport default GridItem;\n","import React from 'react';\nimport GridItem from './GridItem';\n\nclass GridRow extends React.Component {\n  render() {\n    const { columnCount, values, selectItem, selectedItems } = this.props;\n    const gridItems = [];\n    for (let i = 0; i < columnCount; i++) {\n      const item = values[i];\n      gridItems.push(\n        <GridItem\n          item={item}\n          selectItem={selectItem}\n          selectedItems={selectedItems}\n        />\n      );\n    }\n    return <div className=\"grid-row\">{gridItems}</div>;\n  }\n}\n\nexport default GridRow;\n","import React from 'react';\nimport GridRow from './GridRow';\n\nclass GameGrid extends React.Component {\n  render() {\n    const {\n      rowCount,\n      columnCount,\n      valueArray,\n      selectedItems,\n      selectItem,\n    } = this.props;\n\n    if (valueArray.length === 0) {\n      return null;\n    }\n\n    const gridRows = [];\n    for (var i = 0; i < rowCount; i++) {\n      const startIndex = i * columnCount;\n      const endIndex = startIndex + columnCount;\n      gridRows.push(\n        <GridRow\n          columnCount={columnCount}\n          values={valueArray.slice(startIndex, endIndex)}\n          selectItem={selectItem}\n          selectedItems={selectedItems}\n        />\n      );\n    }\n\n    return gridRows;\n  }\n}\n\nexport default GameGrid;\n","import React, { Component } from 'react';\n\nexport default class Score extends Component {\n  render() {\n    const { valueArray } = this.props;\n    const MaxScore = valueArray.length;\n\n    const matched = valueArray.filter(item => {\n      return item.matched === true;\n    });\n\n    return (\n      <div className=\"score\">\n        {matched.length}/{MaxScore}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Timer extends Component {\n  render() {\n    return <div className=\"time\">{this.props.timeRemaining}</div>;\n  }\n}\n","import React from 'react';\n\nexport default class StartModal extends React.Component {\n  render() {\n    const {\n      gameMode,\n      setGameMode,\n      player1,\n      player2,\n      updatePlayer1,\n      updatePlayer2,\n      startNewGame,\n      requestedRounds,\n      updateRequestedRounds,\n    } = this.props;\n\n    return (\n      <div className=\"modal-screen\">\n        {gameMode == null && (\n          <div className=\"modal\">\n            <div className=\"title\">Start New Game</div>\n            <div className=\"button\" onClick={() => setGameMode('single')}>\n              Single Player\n            </div>\n            <div className=\"button\" onClick={() => setGameMode('two')}>\n              Two Players\n            </div>\n          </div>\n        )}\n\n        {gameMode == 'single' && (\n          <div className=\"modal\">\n            <div className=\"title\">Single Player Mode</div>\n            <div className=\"button\" onClick={startNewGame}>\n              Begin\n            </div>\n          </div>\n        )}\n\n        {gameMode == 'two' && (\n          <div className=\"modal\">\n            <div className=\"title\">Two Player Mode</div>\n\n            <input\n              type=\"text\"\n              placeholder=\"Player1 Name\"\n              value={player1.name}\n              onChange={e => updatePlayer1('name', e.target.value)}\n            />\n\n            <input\n              type=\"text\"\n              placeholder=\"Player2 Name\"\n              value={player2.name}\n              onChange={e => updatePlayer2('name', e.target.value)}\n            />\n            <input\n              type=\"number\"\n              value={requestedRounds}\n              onChange={e => updateRequestedRounds(e.target.value)}\n            />\n            <div className=\"button\" onClick={startNewGame}>\n              Begin\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class WinModal extends React.Component {\n  render() {\n    const { valueArray, player1, player2, gameMode } = this.props;\n    // const score1 = valueArray.filter((item)=> item.matched && item.matchedBy==1).length\n    // const score2 = valueArray.filter((item)=> item.matched && item.matchedBy==2).length\n\n    return gameMode === 'single' ? (\n      <div className=\"modal-screen\">\n        <div className=\"modal\">\n          <div className=\"title\">You Won Game</div>\n          <div className=\"button\" onClick={this.props.startNewGame}>\n            Play Again?\n          </div>\n        </div>\n      </div>\n    ) : player1.roundsWon !== player2.roundsWon ? (\n      <div className=\"modal-screen\">\n        <div className=\"modal\">\n          <div className=\"title\">\n            {player1.roundsWon > player2.roundsWon\n              ? player1.name\n              : player2.name}{' '}\n            Won Game\n          </div>\n          <div className=\"button\" onClick={this.props.startNewGame}>\n            Play Again?\n          </div>\n        </div>\n      </div>\n    ) : (\n      <div className=\"modal-screen\">\n        <div className=\"modal\">\n          <div className=\"title\">Its a Draw</div>\n          <div className=\"button\" onClick={this.props.startNewGame}>\n            Play Again?\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class LoseModal extends React.Component {\n  render() {\n    return (\n      <div className=\"modal-screen\">\n        <div className=\"modal\">\n          <div className=\"title\">You Lost Game</div>\n          <div className=\"button\" onClick={this.props.startNewGame}>\n            Play Again?\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport Score from './Score';\nimport Timer from './Timer';\n\nexport default class Header extends Component {\n    constructor(props){\n        super(props)\n    }\n    render() {\n        const {gameMode,timeRemaining,valueArray,player1,player2, currentUser, requestedRounds, currentRound} = this.props\n        const score1 = valueArray.filter((item)=> item.matched && item.matchedBy==1).length\n        const score2 = valueArray.filter((item)=> item.matched && item.matchedBy==2).length\n        const MaxScore = valueArray.length;\n        return (\n            gameMode === 'single' ? \n\n            <div className=\"header\">\n              <Timer timeRemaining={timeRemaining} />\n              <div className=\"name\">Matching Game</div>\n              <Score valueArray={valueArray}/>\n            </div>\n            :\n            <div className=\"header\">\n            <div className=\"playerStats\">\n              <div className={currentUser==1 ? \"name bold\" : \"name\"}>{player1.name} score {score1}/{MaxScore}</div>\n              <div className='roundsWon'>Rounds Won:{player1.roundsWon}</div>\n              </div>\n              <div className='round-wrap'>\n                <div className=\"name\">Round</div>\n                <div className='round'>{currentRound} of {requestedRounds}</div>\n              </div>\n              <div className=\"playerStats\">\n              \n                <div className={currentUser==2 ? \"name bold\" : \"name\"}>{player2.name} score {score2}/{MaxScore}</div>\n                <div className='roundsWon'>Rounds Won:{player2.roundsWon}</div>\n              \n              </div>\n\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport const ThemeContext = React.createContext('light');","import React from 'react';\nimport '../matching_game.scss';\nimport GameGrid from './GameGrid';\nimport Score from './Score';\nimport Timer from './Timer';\nimport StartModal from './StartModal';\nimport WinModal from './WinModal';\nimport LoseModal from './LoseModal';\nimport Header from './Header';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass MatchingGame extends React.Component {\n  state = {\n    valueArray: [],\n    selectedItems: [],\n    timeRemaining: 60,\n    gameMode: null,\n\n    player1: {\n      name: '',\n      roundsWon: 0,\n    },\n\n    player2: {\n      name: '',\n      roundsWon: 0,\n    },\n\n    showStartModal: true,\n    showWinModal: false,\n    showLoseModal: false,\n    gameRunning: false,\n\n    currentUser: 1,\n    requestedRounds: 1,\n    currentRound: 1,\n  };\n\n  startNewGame = () => {\n    // Initialize Grid Values\n    const { rowCount, columnCount } = this.props;\n    const num = (rowCount * columnCount) / 2;\n    const valueArray = [];\n\n    for (let i = 0; i < num; i++) {\n      let randomNum = Math.floor(Math.random() * 100 + 1);\n      while (valueArray.includes(randomNum)) {\n        randomNum = Math.floor(Math.random() * 100 + 1);\n      }\n\n      const item1 = {\n        id: uuidv4(),\n        value: `https://picsum.photos/id/${randomNum}/120/120`,\n        matched: false,\n        matchedBy: null,\n      };\n\n      const item2 = {\n        id: uuidv4(),\n        value: `https://picsum.photos/id/${randomNum}/120/120`,\n        matched: false,\n        matchedBy: null,\n      };\n\n      valueArray.push(item1);\n      valueArray.push(item2);\n    }\n    valueArray.sort(function (a, b) {\n      return 0.5 - Math.random();\n    });\n\n    // Set Initial State and then begin Timer Countdown\n    this.setState(\n      {\n        valueArray,\n        selectedItems: [],\n        timeRemaining: 60,\n        showStartModal: false,\n        showWinModal: false,\n        showLoseModal: false,\n        gameRunning: true,\n      },\n      () => {\n        // Begin Count Down\n        const { timeRemaining, gameRunning, gameMode } = this.state;\n\n        this.timerInterval = setInterval(() => {\n          if (timeRemaining >= 0 && gameRunning && gameMode == 'single') {\n            this.setState({ timeRemaining: timeRemaining - 1 });\n            if (timeRemaining === 0) {\n              clearInterval(this.timerInterval);\n              this.gameLost();\n            }\n          }\n        }, 1000);\n      }\n    );\n  };\n\n  gameLost = () => {\n    this.setState({\n      gameRunning: false,\n      showLoseModal: true,\n    });\n  };\n\n  selectItem = item => {\n    const selectedItems = this.state.selectedItems.concat(item.id);\n    const items = this.state.valueArray.filter(\n      i => selectedItems.indexOf(i.id) >= 0\n    );\n\n    if (items.length === 2) {\n      if (items[0].value === items[1].value) {\n        const valueArray = this.state.valueArray.map(i => {\n          if (i.id === items[0].id || i.id === items[1].id) {\n            return Object.assign({}, i, {\n              matched: true,\n              matchedBy: this.state.currentUser,\n            });\n          }\n          return i;\n        });\n\n        let totalMatches = valueArray.filter(i => i.matched === true);\n        const score1 = valueArray.filter(\n          item => item.matched && item.matchedBy == 1\n        ).length;\n        const score2 = valueArray.filter(\n          item => item.matched && item.matchedBy == 2\n        ).length;\n        let { player1, player2, currentRound, requestedRounds } = this.state;\n\n        if (valueArray.length === totalMatches.length) {\n          console.log('All Items Flipped', this.state.currentRound);\n          let player1Clone = Object.assign({}, player1, {\n            roundsWon:\n              score1 > score2 ? player1.roundsWon + 1 : player1.roundsWon,\n          });\n          let player2Clone = Object.assign({}, player2, {\n            roundsWon:\n              score1 < score2 ? player2.roundsWon + 1 : player2.roundsWon,\n          });\n          console.log('CurrentRounds', currentRound);\n          console.log('roundsRequested', requestedRounds);\n          if (currentRound < requestedRounds) {\n            console.log('Updated CurrentRounds', this.state.currentRound);\n            this.setState(\n              {\n                valueArray,\n                player1: player1Clone,\n                player2: player2Clone,\n                currentRound: currentRound + 1,\n              },\n              () => {\n                this.startNewGame();\n              }\n            );\n          } else {\n            this.setState({\n              valueArray,\n              player1: player1Clone,\n              player2: player2Clone,\n              showWinModal: true,\n            });\n          }\n        } else {\n          this.setState({ valueArray });\n        }\n      } else if (this.state.gameMode == 'two') {\n        const currentUser = this.state.currentUser == 1 ? 2 : 1;\n        this.setState({ currentUser });\n      }\n\n      setTimeout(() => {\n        console.log('Clear Selected Items');\n        this.setState({ selectedItems: [] });\n      }, 500);\n    }\n\n    this.setState({\n      selectedItems,\n    });\n  };\n\n  updateRequestedRounds = e => {\n    this.setState({\n      requestedRounds: e,\n    });\n  };\n\n  render() {\n    const { rowCount, columnCount } = this.props;\n    const {\n      showStartModal,\n      showWinModal,\n      showLoseModal,\n      gameMode,\n      player1,\n      player2,\n      gameRunning,\n      currentUser,\n      requestedRounds,\n      currentRound,\n    } = this.state;\n\n    return (\n      <div className=\"matching-game\">\n        {/* Modals */}\n        {showStartModal && (\n          <StartModal\n            gameMode={gameMode}\n            startNewGame={this.startNewGame}\n            setGameMode={mode => {\n              this.setState({ gameMode: mode });\n            }}\n            player1={player1}\n            player2={player2}\n            updatePlayer1={(field, value) => {\n              const p1 = Object.assign({}, player1, { [field]: value });\n              this.setState({ player1: p1 });\n            }}\n            updatePlayer2={(field, value) => {\n              const p2 = Object.assign({}, player2, { [field]: value });\n              this.setState({ player2: p2 });\n            }}\n            requestedRounds={requestedRounds}\n            updateRequestedRounds={this.updateRequestedRounds}\n          />\n        )}\n        {showWinModal && (\n          <WinModal\n            valueArray={this.state.valueArray}\n            player1={player1}\n            player2={player2}\n            gameMode={gameMode}\n            startNewGame={this.startNewGame}\n          />\n        )}\n        {showLoseModal && <LoseModal startNewGame={this.startNewGame} />}\n\n        {/* Game */}\n        {gameRunning && (\n          <Header\n            gameMode={gameMode}\n            timeRemaining={this.state.timeRemaining}\n            valueArray={this.state.valueArray}\n            player1={player1}\n            player2={player2}\n            currentUser={currentUser}\n            requestedRounds={requestedRounds}\n            currentRound={currentRound}\n          />\n        )}\n\n        <div className=\"grid-wrap\">\n          <GameGrid\n            valueArray={this.state.valueArray}\n            selectItem={this.selectItem}\n            selectedItems={this.state.selectedItems}\n            rowCount={rowCount}\n            columnCount={columnCount}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MatchingGame;\n","import React, { Component } from 'react';\nimport {ThemeContext} from './theme_context'\n\nexport default class ThemeSelector extends Component {\n  static contextType = ThemeContext;\n\n  render() {\n    const {theme, updateTheme} = this.context\n\n    return (\n      <div className=\"theme-selector\">\n         <label>{theme} Theme</label>\n         <div className=\"dd-menu\">\n            <div className={`dd-item ${theme}`} onClick={()=>updateTheme('dark')}>Dark Theme</div>\n            <div className={`dd-item ${theme}`} onClick={()=>updateTheme('light')}>Light Theme</div>\n         </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ThemeSelector from './ThemeSelector'\nimport {ThemeContext} from './theme_context'\n\nexport default class TopNav extends Component {\n  static contextType = ThemeContext;\n\n  render() {\n    const {theme} = this.context\n    return (\n      <div className='top-nav'>\n        Top Nav\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n\nexport default class NavBtn extends Component {\n\n  render() {\n    const icon = this.props.icon\n    const theme = this.context.theme\n\n    return (\n      <div className={`nav-btn`} onClick={this.props.onClick}>\n        {icon}\n        <label>{this.props.label}</label>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport NavBtn from './NavBtn'\nimport {ThemeContext} from './theme_context'\n\nexport default class SideNav extends Component {\n    render() {\n        return (\n            <div className={`side-nav`}>\n                    Side Nav\n                {/*\n\n                <NavBtn\n                    icon={<i class=\"fas fa-users\"></i>}\n                    label='Users'\n                />\n\n                <NavBtn\n                    icon={<i class=\"fas fa-envelope\"></i>}\n                    label='Messages'\n                />\n\n                <NavBtn\n                    icon={<i class=\"fas fa-chart-bar\"></i>}\n                    label='Analytics'\n                />\n\n                <NavBtn\n                    icon={<i class=\"fas fa-cog\"></i>}\n                    label='Settings'\n                />\n                */}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport SideNav from './SideNav'\nimport {ThemeContext} from './theme_context'\n\n\nexport default class Content extends Component {\n    static contextType = ThemeContext;\n\n    render() {\n        return (\n         <div className='content-section'>\n            <SideNav/>\n            <div className={`content-pane ${this.context.theme}`}>Content Theme is: {this.context.theme}</div>\n         </div>\n        )\n    }\n}\n","import React from 'react'\nimport TopNav from './TopNav'\nimport SideNav from './SideNav'\nimport Content from './Content'\nimport {ThemeContext} from './theme_context'\n\n\nexport default class Dashboard extends React.Component{\n    render(){\n        return(\n            <div className='dashboard'>\n                <TopNav/>\n                <div className='content-section'>\n                    <SideNav/>\n                    <div className='content-pane'>\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import Dashboard from './index.js'\nimport React from 'react'\n\nexport default class UserDashboard extends React.Component{\n    render(){\n        return(\n            <Dashboard>User Dashboard</Dashboard>\n        )\n    }\n}","import Dashboard from './index.js'\nimport React from 'react'\n\nexport default class MessageDashboard extends React.Component{\n    render(){\n        return(\n            <Dashboard>Message Dashboard</Dashboard>\n        )\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Button } from '@material-ui/core';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\nexport default class HomeScreen extends React.Component {\n  render() {\n    return (\n      <Container className=\"screen\">\n        <ListAltIcon />\n        <div className=\"title\">Todo App</div>\n        <div className=\"description\">Best App To Get Organized</div>\n        <Link to=\"/login\">\n          <Button className=\"btn\" variant=\"contained\" color=\"primary\">\n            Login\n          </Button>\n        </Link>\n        <Link to=\"/register\">\n          <Button className=\"btn\" variant=\"contained\" color=\"primary\">\n            Register\n          </Button>\n        </Link>\n        <Link to=\"/forgot-password\">\n          <div className=\"forgot-link\">Forgot Password?</div>\n        </Link>\n      </Container>\n    );\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    token: null\n  },\n  reducers: {\n    setToken: (state, { payload }) => {\n      state.token = payload.token\n    },\n    logout: (state, { payload }) => {\n      state.token = null\n    },\n  }\n})\n\nexport const { setToken, logout } = authSlice.actions","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Container, Button, TextField } from '@material-ui/core';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport { setToken } from '../reducers/AuthSlice.js'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n\nclass LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errorFields: [],\n      loginError: '',\n    };\n  }\n\n  updateUser = (field, value) => {\n    // Clear Errors for field\n    const errorFields = this.state.errorFields.filter(f => f != field);\n    const updatedState = Object.assign({}, this.state, {\n      [field]: value,\n      errorFields,\n    });\n    this.setState(updatedState);\n  };\n\n  handleLogin = async () => {\n    console.log('Handle Login');\n    const { email, password } = this.state;\n\n    // Validate Required Fields\n    let errorFields = [];\n\n    if (email == '') {\n      errorFields.push('email');\n    }\n\n    if (password == '') {\n      errorFields.push('password');\n    }\n\n    this.setState({ errorFields, loginError: '' });\n\n    // Login User\n    if (errorFields.length == 0) {\n      console.log('No Error. Submit Form');\n      let loginURL = 'http://localhost:9000/api/users/login/';\n      const response = await fetch(loginURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      let respJson = await response.json();\n      if (response.status == 200) {\n        const { token } = respJson;\n        this.props.setToken({token})\n      } else {\n        console.log('Server-side Validation Failed');\n        console.log(respJson);\n        this.setState({ loginError: respJson.message });\n      }\n    }\n  };\n\n  render() {\n    const { email, password, errorFields, loginError } = this.state;\n    const {setAuthToken, token} = this.props\n\n    return token ? <Redirect to='/todo-dashboard'/> : (\n      <Container className=\"screen\">\n        <ListAltIcon />\n        <div className=\"title\">Todo App</div>\n        <div className=\"description\">Best App To Get Organized</div>\n        {loginError && <div className=\"alert-msg\">{loginError}</div>}\n\n        <TextField\n          className=\"text-field\"\n          label=\"Email\"\n          variant=\"filled\"\n          fullWidth={true}\n          value={email}\n          error={errorFields.indexOf('email') >= 0 ? true : false}\n          onChange={e => this.updateUser('email', e.target.value)}\n        />\n           \n        <TextField\n          type=\"password\"\n          className=\"text-field\"\n          label=\"Password\"\n          variant=\"filled\"\n          fullWidth={true}\n          value={password}\n          error={errorFields.indexOf('password') >= 0 ? true : false}\n          onChange={e => this.updateUser('password', e.target.value)}\n        />\n        <Link to=\"/login\">\n          <Button\n            className=\"btn\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleLogin}\n          >\n            Login\n          </Button>\n        </Link>\n        <Link to=\"/forgot-password\">\n          <div className=\"forgot-link\">Forgot Password?</div>\n        </Link>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    setToken,\n}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginScreen)\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Button, TextField } from '@material-ui/core';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\nexport default class RegisterScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        phone: '',\n        email: '',\n        password: '',\n      },\n\n      errorFields: [],\n      registrationComplete: false,\n      registrationError: '',\n    };\n  }\n\n  updateUser = (field, value) => {\n    // Clear Errors for field\n    const errorFields = this.state.errorFields.filter(f => f != field);\n    const user = Object.assign({}, this.state.user, { [field]: value });\n    this.setState({ user, errorFields });\n  };\n\n  handleRegister = async () => {\n    const { firstName, lastName, phone, email, password } = this.state.user;\n    console.log('Register User');\n\n    // Validate Required Fields\n    let errorFields = [];\n    if (firstName == '') {\n      errorFields.push('firstName');\n    }\n\n    if (lastName == '') {\n      errorFields.push('lastName');\n    }\n\n    if (phone == '') {\n      errorFields.push('phone');\n    }\n\n    if (email == '') {\n      errorFields.push('email');\n    }\n\n    if (password == '') {\n      errorFields.push('password');\n    }\n\n    this.setState({ errorFields, registrationError: '' });\n\n    // Register User\n    if (errorFields.length == 0) {\n      console.log('No Error. Submit Form');\n      let registerURL = 'http://localhost:9000/api/users/register/';\n      const response = await fetch(registerURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(this.state.user),\n      });\n\n      if (response.status == 200) {\n        console.log('Registration Successful');\n        const user = {\n          firstName: '',\n          lastName: '',\n          phone: '',\n          email: '',\n          password: '',\n        };\n        this.setState({ registrationComplete: true, user });\n      } else {\n        console.log('Server-side Validation Failed');\n        let respJson = await response.json();\n        console.log(respJson);\n        this.setState({ registrationError: respJson.message });\n      }\n    }\n  };\n\n  render() {\n    const { firstName, lastName, phone, email, password } = this.state.user;\n    const { errorFields, registrationError, registrationComplete } = this.state;\n\n    return (\n      <Container className=\"screen\">\n        <ListAltIcon />\n        <div className=\"title\">Todo App</div>\n        <div className=\"description\">Best App To Get Organized</div>\n\n        {registrationError && (\n          <div className=\"alert-msg\">{registrationError}</div>\n        )}\n        {registrationComplete && (\n          <div className=\"success-msg\">Registration Success</div>\n        )}\n\n        <div className=\"input-row\">\n          <TextField\n            className=\"text-field\"\n            label=\"First Name\"\n            variant=\"filled\"\n            fullWidth={true}\n            value={firstName}\n            error={errorFields.indexOf('firstName') >= 0 ? true : false}\n            onChange={e => this.updateUser('firstName', e.target.value)}\n          />\n\n          <TextField\n            className=\"text-field\"\n            label=\"Last Name\"\n            variant=\"filled\"\n            fullWidth={true}\n            value={lastName}\n            error={errorFields.indexOf('lastName') >= 0 ? true : false}\n            onChange={e => this.updateUser('lastName', e.target.value)}\n          />\n        </div>\n\n        <TextField\n          className=\"text-field\"\n          label=\"Phone\"\n          variant=\"filled\"\n          fullWidth={true}\n          value={phone}\n          error={errorFields.indexOf('phone') >= 0 ? true : false}\n          onChange={e => this.updateUser('phone', e.target.value)}\n        />\n\n        <TextField\n          className=\"text-field\"\n          label=\"Email\"\n          type=\"email\"\n          variant=\"filled\"\n          fullWidth={true}\n          value={email}\n          error={errorFields.indexOf('email') >= 0 ? true : false}\n          onChange={e => this.updateUser('email', e.target.value)}\n        />\n\n        <TextField\n          type=\"password\"\n          className=\"text-field\"\n          label=\"Password\"\n          variant=\"filled\"\n          fullWidth={true}\n          value={password}\n          error={errorFields.indexOf('password') >= 0 ? true : false}\n          onChange={e => this.updateUser('password', e.target.value)}\n        />\n        <Link to=\"/password-reset\">\n          <Button\n            className=\"btn\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleRegister}\n          >\n            Register\n          </Button>\n        </Link>\n        <Link to=\"/login\">\n          <div className=\"forgot-link\">Already have account?</div>\n        </Link>\n      </Container>  \n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Button, TextField } from '@material-ui/core';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\nexport default class ForgotPasswordScreen extends React.Component {\n  render() {\n    return (\n      <Container className=\"screen\">\n        <ListAltIcon />\n        <div className=\"title\">Todo App</div>\n        <div className=\"description\">Best App To Get Organized</div>\n\n        <TextField\n          className=\"text-field\"\n          label=\"Email\"\n          variant=\"filled\"\n          fullWidth={true}\n        />\n        <Link to=\"/password-reset\">\n          <Button className=\"btn\" variant=\"contained\" color=\"primary\">\n            Reset Password\n          </Button>\n        </Link>\n        <Link to=\"/login\">\n          <Button className=\"btn\" variant=\"contained\" color=\"primary\">\n            Login\n          </Button>\n        </Link>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Button, TextField } from '@material-ui/core';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\nexport default class PasswordResetScreen extends React.Component {\n  render() {\n    return (\n      <Container className=\"screen\">\n        <ListAltIcon />\n        <div className=\"title\">Todo App</div>\n        <div className=\"description\">Best App To Get Organized</div>\n\n        <TextField\n          className=\"text-field\"\n          label=\"Password\"\n          variant=\"filled\"\n          fullWidth={true}\n          type=\"password\"\n        />\n\n        <TextField\n          className=\"text-field\"\n          label=\"Confirm Password\"\n          variant=\"filled\"\n          fullWidth={true}\n          type=\"password\"\n        />\n        <Link to=\"/password-reset\">\n          <Button className=\"btn\" variant=\"contained\" color=\"primary\">\n            Reset Password\n          </Button>\n        </Link>\n        <Link to=\"/login\">\n          <Button className=\"btn\" variant=\"contained\" color=\"primary\">\n            Login\n          </Button>\n        </Link>\n      </Container>\n    );\n  }\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\n// Async Functions\nexport const fetchTodoItems = createAsyncThunk(\n  'fetchTodoItems',\n  async (args, thunkAPI) => {\n    const token = thunkAPI.getState().auth.token;\n    const fetchUrl = 'http://localhost:9000/api/todos/';\n    const response = await fetch(fetchUrl, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    let todoList = await response.json();\n    return todoList;\n  }\n);\n\nexport const saveTodoItem = createAsyncThunk(\n  'saveTodoItem',\n  async (todoItem, thunkAPI) => {\n    console.log('Todo Item: ', todoItem);\n    const token = thunkAPI.getState().auth.token;\n    const createUrl = 'http://localhost:9000/api/todos/';\n    const response = await fetch(createUrl, {\n      method: todoItem._id ? 'PATCH' : 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(todoItem),\n    });\n\n    let todoList = [];\n    if (todoItem._id) {\n      todoList = thunkAPI.getState().todo.todoList.map((item) => {\n        if (item._id == todoItem._id) {\n          return todoItem;\n        }\n        return item;\n      });\n    } else {\n      let newTodoItem = await response.json();\n      todoList = thunkAPI.getState().todo.todoList.concat(newTodoItem);\n    }\n\n    return todoList;\n  }\n);\nexport const deleteTodoItem = createAsyncThunk(\n  'deleteTodoItem',\n  async (itemID, thunkAPI) => {\n    const token = thunkAPI.getState().auth.token;\n    const deleteUrl = 'http://localhost:9000/api/todos/';\n    const response = await fetch(deleteUrl, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ _id: itemID }),\n    });\n    const todoList = thunkAPI\n      .getState()\n      .todo.todoList.filter((item) => item._id != itemID);\n\n    return todoList;\n  }\n);\n\n\nexport const completeItem = createAsyncThunk(\n  'completeItem',\n  async (item, thunkAPI) => {\n    const token = thunkAPI.getState().auth.token;\n    const updatedItem = Object.assign({}, item, { isComplete: true });\n    const updateUrl = 'http://localhost:9000/api/todos/';\n    const response = await fetch(updateUrl, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(updatedItem),\n    });\n  \n    const todoList = thunkAPI\n      .getState()\n      .todo.todoList.map((i) => {\n      if (i._id == updatedItem._id) {\n        return updatedItem;\n      }\n  \n      return i;\n    });\n\n    return todoList;\n\n  }\n) \n\n\n\n\n//\nexport const todoSlice = createSlice({\n  name: 'todo',\n  initialState: {\n    todoList: [],\n    showTodoModal: false,\n    modalItem: null,\n  },\n\n  reducers: {\n    setTodoModal: (state, action) => {\n      state.showTodoModal = action.payload;\n    },\n    setModalItem: (state, action) => {\n      state.modalItem = action.payload;\n    }\n  },\n\n  extraReducers: {\n    [fetchTodoItems.fulfilled]: (state, action) => {\n      state.todoList = action.payload;\n    },\n    [saveTodoItem.fulfilled]: (state, action) => {\n      state.todoList = action.payload;\n    },\n    [deleteTodoItem.fulfilled]: (state, action) => {\n      state.todoList = action.payload;\n    },\n    [completeItem.fulfilled]: (state, action) => {\n      state.todoList = action.payload;\n    }\n  },\n});\n\nexport const { setTodoModal, setModalItem } = todoSlice.actions;\n","import React from 'react';\nimport {\n  Container,\n  Button,\n  AppBar,\n  Toolbar,\n  Avatar,\n  Checkbox,\n  TextField,\n} from '@material-ui/core';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport EditIcon from '@material-ui/icons/Edit';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  fetchTodoItems,\n  saveTodoItem,\n  deleteTodoItem,\n  setTodoModal,\n  setModalItem,\n  completeItem,\n} from '../reducers/TodoSlice';\nimport { logout } from '../reducers/AuthSlice';\n\nclass TodoModal extends React.Component {\n  render() {\n    const { open, handleClose, handleSave, item, updateItem } = this.props;\n\n    return item ? (\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle id=\"form-dialog-title\">Todo</DialogTitle>\n        <DialogContent>\n          <TextField\n            className=\"modal-field\"\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Description\"\n            value={item.description}\n            onChange={(e) => updateItem(e.target.value)}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    ) : null;\n  }\n}\n\nclass TodoItem extends React.Component {\n  render() {\n    const { item, editItem, deleteItem, completeItem } = this.props;\n\n    return (\n      <div className={item.isComplete ? 'todo-item completed' : 'todo-item'}>\n        <div className=\"left\">\n          <Checkbox />\n          <div className=\"description\">{item.description}</div>\n        </div>\n        <div className=\"right\">\n          <div className=\"complete-btn\" onClick={completeItem}>\n            Completed\n          </div>\n          <EditIcon onClick={editItem} />\n          <HighlightOffIcon onClick={deleteItem} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TodoListScreen extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchTodoItems();\n  }\n\n  render() {\n    const { showTodoModal, setModalItem, modalItem, setTodoModal } = this.props;\n    const todoItems = this.props.todoList.map((item) => (\n      <TodoItem\n        key={item._id}\n        item={item}\n        editItem={() => {\n          setModalItem(item);\n          setTodoModal(true);\n        }}\n        deleteItem={() => this.props.deleteTodoItem(item._id)}\n        completeItem={() => this.props.completeItem(item)}\n      />\n    ));\n\n    return (\n      <Container className=\"todo-dashboard\">\n        {/*  Modals */}\n        <TodoModal\n          open={showTodoModal}\n          item={modalItem}\n          handleClose={() => {\n            this.props.setTodoModal(false);\n          }}\n          handleSave={() => {\n            this.props.saveTodoItem(modalItem);\n            this.props.setTodoModal(false);\n          }}\n          updateItem={(description) => {\n            const updatedModalItem = Object.assign({}, modalItem, {\n              description,\n            });\n            setModalItem(updatedModalItem)\n          }}\n        />\n\n        {/* App Bar */}\n        <AppBar position=\"static\">\n          <Toolbar className=\"tool-bar\">\n            {/* App Title */}\n            <div className=\"app-title\">\n              <ListAltIcon />\n              <div className=\"name\">Todo App</div>\n            </div>\n\n            {/* Search Bar */}\n            <div className=\"search-bar\">\n              <SearchIcon />\n              <input type=\"text\" />\n            </div>\n\n            {/* Super Nav */}\n            <div className=\"super-nav\">\n              <div className=\"toggle\">\n                <Avatar className=\"avatar\">S</Avatar>\n                <div className=\"username\">Steven L.</div>\n                <KeyboardArrowDownIcon className=\"chevron\" />\n              </div>\n\n              <div className=\"super-dd-menu\">\n                <div className=\"dd-item\">\n                  <SettingsIcon />\n                  <label>Settings</label>\n                </div>\n                <div className=\"dd-item\" onClick={this.props.logout}>\n                  <ExitToAppIcon />\n                  <label>Logout</label>\n                </div>\n              </div>\n            </div>\n          </Toolbar>\n        </AppBar>\n\n        {/* List Container */}\n        <div className=\"list-container\">\n          <div className=\"todo-list\">{todoItems}</div>\n\n          <div className=\"control-bar\">\n            <div className=\"left\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"btn create-btn\"\n                onClick={() => {\n                  const modalItem = {\n                    _id: null,\n                    description: '',\n                    isComplete: false,\n                  };\n                  setTodoModal(true);\n                  setModalItem(modalItem);\n                }}\n              >\n                New Todo\n              </Button>\n            </div>\n\n            <div className=\"right\">\n              <Button variant=\"contained\" color=\"primary\" className=\"btn\">\n                Complete\n              </Button>\n              <Button variant=\"contained\" color=\"secondary\" className=\"btn\">\n                Delete\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    todoList: state.todo.todoList,\n    showTodoModal: state.todo.showTodoModal,\n    modalItem: state.todo.modalItem,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchTodoItems,\n      saveTodoItem,\n      deleteTodoItem,\n      logout,\n      setTodoModal,\n      setModalItem,\n      completeItem,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListScreen);\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nexport default class NestedRouteUI extends React.Component{\n    render(){\n        return (\n            <div className='nestedUI'>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/nested/\">\n                            <div>Nested Home Route</div>\n                        </Route>\n\n                        <Route path=\"/nested/topics/:topic_id/:post_id/\" component={TopicSection}/>\n\n                        <Route path=\"/nested/community\">\n                            <div>Nested Community Route</div>\n                        </Route>\n\n                    </Switch>\n                </Router>\n            </div>\n        )\n    }\n}\n\n\nclass TopicSection extends React.Component{\n    render(){\n        return(\n            <div>\n                <div>Topic URL Param Test: {this.props.match.params.topic_id}</div>\n                <div>Post ID: {this.props.match.params.post_id}</div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport HomeScreen from './HomeScreen'\nimport LoginScreen from './LoginScreen'\nimport RegisterScreen from './RegisterScreen'\nimport ForgotPasswordScreen from './ForgotPasswordScreen'\nimport PasswordResetScreen from './PasswordResetScreen'\nimport TodoListScreen from './TodoListScreen'\nimport NestedRouteUI from './NestedRouteUI'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\n\nclass PrivateRoute extends React.Component{\n    render(){\n        const {token, component} = this.props\n\n         return (\n             <Route render={() => token ? component: <Redirect to=\"/login\"/> }/>\n         )\n    }\n}\n\n\nclass TodoApp extends React.Component{\n\n    render(){\n        const {token} = this.props\n\n        return (\n            <div className='todo-app'>\n                <Router>\n                    <Switch>\n\n                        <Route exact path=\"/\">\n                            <HomeScreen/>\n                        </Route>\n\n                        <Route path=\"/login\">\n                            <LoginScreen/>\n                        </Route>\n\n                        <Route path=\"/register\">\n                            <RegisterScreen/>\n                        </Route>\n\n                        <Route path=\"/forgot-password\">\n                            <ForgotPasswordScreen/>\n                        </Route>\n\n                        <Route path=\"/password-reset\">\n                            <PasswordResetScreen/>\n                        </Route>\n\n                        <PrivateRoute path=\"/todo-dashboard\" component={<TodoListScreen/>} token={token}/>\n\n                        <Route path=\"/nested\">\n                            <NestedRouteUI/>\n                        </Route>\n\n                    </Switch>\n\n                </Router>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token : state.auth.token,\n    completedItems: state.todo.completedItems,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoApp)","import React from 'react';\n\nexport default class ImageUploader extends React.Component{\n\n    state = {\n      selectedFile: null,\n      fileUrl: null,\n    };\n\n    onFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0],\n        fileUrl: URL.createObjectURL(event.target.files[0])\n     });\n    };\n\n    onFileUpload = () => {\n      // Create an object of formData\n      const formData = new FormData();\n\n      // Update the formData object\n      formData.append(\n        \"imgFile2\",\n        this.state.selectedFile,\n        this.state.selectedFile.name\n      );\n\n      formData.append('name', 'steve')\n\n\n      // Details of the uploaded file\n      console.log(this.state.selectedFile);\n\n      // Request made to the backend api\n      // Send formData object\n      //axios.post(\"api/uploadfile\", formData);\n    };\n\n    render(){\n        return (\n            <div>\n                <h1>Image Uploader 777</h1>\n                <input type='file' onChange={this.onFileChange}/>\n                <img src={this.state.fileUrl}/>\n                <button onClick={this.onFileUpload}>\n                  Upload!\n                </button>\n            </div>\n        )\n    }\n}","import { combineReducers } from 'redux'\nimport { authSlice } from './AuthSlice.js'\nimport { todoSlice } from './TodoSlice.js'\n\nexport default combineReducers({\n  auth: authSlice.reducer,\n  todo: todoSlice.reducer,\n})","import React from 'react';\nimport './App.css';\nimport './dashboard.scss';\nimport './todo_app.scss';\nimport MatchingGame from './MatchingGame';\nimport Dashboard from './Dashboard';\nimport UserDashboard from './Dashboard/UserDashboard';\nimport MessageDashboard from './Dashboard/MessageDashboard';\nimport TodoApp from './TodoApp'\nimport ImageUploader from './ImageUploader'\nimport { createSlice, configureStore } from '@reduxjs/toolkit'\nimport { Provider } from 'react-redux'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from './reducers'\n\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n\nconst store = createStore(\n  persistedReducer,\n  applyMiddleware(logger, thunk)\n)\n\nlet persistor = persistStore(store)\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <ImageUploader/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}